// <auto-generated />
using System;
using ArduinoIntegrationApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArduinoIntegrationApi.Migrations
{
    [DbContext(typeof(ArduinoApiContext))]
    [Migration("20211010135807_addedJWtToken")]
    partial class addedJWtToken
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArduinoIntegrationApi.DataModels.CurtainReading", b =>
                {
                    b.Property<int>("Cr_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cr_Value")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Cr_Id");

                    b.ToTable("CurtainReading");
                });

            modelBuilder.Entity("ArduinoIntegrationApi.DataModels.HumidityReading", b =>
                {
                    b.Property<int>("Hr_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Hr_Value")
                        .HasColumnType("real");

                    b.HasKey("Hr_Id");

                    b.ToTable("HumidityReading");
                });

            modelBuilder.Entity("ArduinoIntegrationApi.DataModels.JwtToken", b =>
                {
                    b.Property<int>("JwtToken_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("JwtToken_Id");

                    b.HasIndex("Username");

                    b.ToTable("JwtTokens");
                });

            modelBuilder.Entity("ArduinoIntegrationApi.DataModels.LightReading", b =>
                {
                    b.Property<int>("Lr_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Lr_Value")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Lr_Id");

                    b.ToTable("LightReading");
                });

            modelBuilder.Entity("ArduinoIntegrationApi.DataModels.RoomReading", b =>
                {
                    b.Property<string>("Rr_RoomName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("Rr_Cts")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Cr_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Hr_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Lr_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Sr_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Tr_FeetTr_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Tr_HeadTr_Id")
                        .HasColumnType("int");

                    b.HasKey("Rr_RoomName", "Rr_Cts");

                    b.HasIndex("Cr_Id");

                    b.HasIndex("Hr_Id");

                    b.HasIndex("Lr_Id");

                    b.HasIndex("Sr_Id");

                    b.HasIndex("Tr_FeetTr_Id");

                    b.HasIndex("Tr_HeadTr_Id");

                    b.ToTable("RoomReading");
                });

            modelBuilder.Entity("ArduinoIntegrationApi.DataModels.SoundReading", b =>
                {
                    b.Property<int>("Sr_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Sr_Value")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Sr_Id");

                    b.ToTable("SoundReading");
                });

            modelBuilder.Entity("ArduinoIntegrationApi.DataModels.TemperatureReading", b =>
                {
                    b.Property<int>("Tr_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Tr_Value")
                        .HasColumnType("real");

                    b.HasKey("Tr_Id");

                    b.ToTable("TemperatureReading");
                });

            modelBuilder.Entity("ArduinoIntegrationApi.DataModels.Users", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ArduinoIntegrationApi.DataModels.JwtToken", b =>
                {
                    b.HasOne("ArduinoIntegrationApi.DataModels.Users", "User")
                        .WithMany()
                        .HasForeignKey("Username");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ArduinoIntegrationApi.DataModels.RoomReading", b =>
                {
                    b.HasOne("ArduinoIntegrationApi.DataModels.CurtainReading", "Cr")
                        .WithMany()
                        .HasForeignKey("Cr_Id");

                    b.HasOne("ArduinoIntegrationApi.DataModels.HumidityReading", "Hr")
                        .WithMany()
                        .HasForeignKey("Hr_Id");

                    b.HasOne("ArduinoIntegrationApi.DataModels.LightReading", "Lr")
                        .WithMany()
                        .HasForeignKey("Lr_Id");

                    b.HasOne("ArduinoIntegrationApi.DataModels.SoundReading", "Sr")
                        .WithMany()
                        .HasForeignKey("Sr_Id");

                    b.HasOne("ArduinoIntegrationApi.DataModels.TemperatureReading", "Tr_Feet")
                        .WithMany()
                        .HasForeignKey("Tr_FeetTr_Id");

                    b.HasOne("ArduinoIntegrationApi.DataModels.TemperatureReading", "Tr_Head")
                        .WithMany()
                        .HasForeignKey("Tr_HeadTr_Id");

                    b.Navigation("Cr");

                    b.Navigation("Hr");

                    b.Navigation("Lr");

                    b.Navigation("Sr");

                    b.Navigation("Tr_Feet");

                    b.Navigation("Tr_Head");
                });
#pragma warning restore 612, 618
        }
    }
}
